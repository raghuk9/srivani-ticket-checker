name: Srivani Token Status Checker

on:
  schedule:
    # Runs every day at 00:00 UTC (adjust as needed using crontab.guru)
    # Remember that GitHub Actions schedules are based on UTC.
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  run_tagui_script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up TagUI
      run: |
        # Update and install necessary dependencies
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jre unzip chromium-browser xvfb curl
    
        # Download TagUI (ensure this URL is the latest and correct one)
        # Re-verify the URL from https://github.com/tebelorg/TagUI/releases before running!
        wget --no-check-certificate https://github.com/aisingapore/TagUI/releases/download/v6.110.0/TagUI_Linux.zip -O /tmp/TagUI_Linux.zip
        # --- START OF CRITICAL MODIFICATION ---

        # Unzip TagUI to a temporary directory in a way that reveals its top-level folder
        mkdir -p /tmp/tagui_extracted
        unzip /tmp/TagUI_Linux.zip -d /tmp/tagui_extracted
    
        # Find the actual top-level folder name (e.g., 'TagUI' or 'tagui')
        # This command lists what was extracted directly into /tmp/tagui_extracted
        TAGUI_FOLDER=$(ls -1 /tmp/tagui_extracted | head -n 1)
        echo "Identified TagUI top-level folder: $TAGUI_FOLDER"
    
        # Create the final destination directory
        sudo mkdir -p /usr/local/share/TagUI_Final
        sudo chmod 755 /usr/local/share/TagUI_Final
    
        # Move the contents of the extracted folder into the final destination
        sudo mv /tmp/tagui_extracted/"$TAGUI_FOLDER"/* /usr/local/share/TagUI_Final/
    
        # Now, the 'src' folder (and 'tagui' executable) should be directly under TagUI_Final
        TAGUI_INSTALL_PATH="/usr/local/share/TagUI_Final"
        # --- END OF CRITICAL MODIFICATION ---

        
        # Verify TagUI directory contents (for debugging)
        echo "Listing contents of /usr/local/share/TagUI:"
        ls -la /usr/local/share/TagUI/src/
    
        # Ensure the TagUI executable has execute permissions
        sudo chmod +x /usr/local/share/TagUI/src/tagui
    
        # Create the symbolic link to make 'tagui' callable globally
        sudo ln -sf /usr/local/share/TagUI/src/tagui /usr/local/bin/tagui
    
        # Verify the symbolic link (for debugging)
        echo "Verifying symbolic link:"
        ls -la /usr/local/bin/tagui
    
        # Verify TagUI is now found in PATH
        echo "Checking if tagui command is found:"
        which tagui
    
        # This command initializes TagUI and downloads its internal dependencies.
        # It must be run after the 'tagui' command is available in PATH.
        tagui

    - name: Run TagUI script
      run: |
        cd flows # Navigate to the directory containing your .tag file
        tagui srivani.tag -headless # Run your TagUI script in headless mode
      env:
        # You might need to set DISPLAY for some TagUI operations,
        # though -headless often makes it unnecessary.
        DISPLAY: ':99.0' # Required for GUI applications in some cases

    - name: Upload CSV artifact
      uses: actions/upload-artifact@v4
      with:
        name: srivani-data
        path: srivani.csv # Adjust path if your script writes elsewhere

    - name: Commit and push CSV (optional, if you want to track it in repo)
      # This step is optional. If you just want to download the CSV as an artifact,
      # you can skip this. If you want the CSV to be committed back to your repo,
      # you'll need to configure Git.
      if: success() # Only run if previous steps succeeded
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add srivani.csv # Assuming the CSV is in the flows directory
        git commit -m "Update Srivani data" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
